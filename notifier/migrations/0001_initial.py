# Generated by Django 4.0.6 on 2022-07-14 07:18

import data
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_choices_field.fields
import notifier.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crn', models.CharField(max_length=5, unique=True, verbose_name='CRN')),
                ('term', models.CharField(max_length=6, verbose_name='term')),
                ('department', django_choices_field.fields.TextChoicesField(choices=[('AF', 'Accounting & Finance'), ('AE', 'Aerospace Engineering'), ('ARE', 'Architectural Engineering'), ('ARC', 'Architecture'), ('CE', 'Civil & Environmental Engg'), ('CEM', 'Construction Engg & Management'), ('CHE', 'Chemical Engineering'), ('CHEM', 'Chemistry'), ('COE', 'Computer Engineering'), ('CPG', 'CPG'), ('CRP', 'City & Regional Planning'), ('ERTH', 'Earth Sciences'), ('EE', 'Electrical Engineering'), ('ELI', 'English Language Inst. (Prep)'), ('ELD', 'English Language Department'), ('FIN', 'Finance'), ('ISOM', 'Info. Systems & Operations Mgt'), ('GS', 'Global & Social Studies'), ('IAS', 'Islamic & Arabic Studies'), ('ICS', 'Information & Computer Science'), ('LS', 'Life Sciences'), ('MATH', 'Mathematics & Statistics'), ('MBA', 'Business Administration'), ('ME', 'Mechanical Engineering'), ('MGT', 'Management & Marketing'), ('PE', 'Physical Education'), ('PETE', 'Petroleum Engineering'), ('PHYS', 'Physics'), ('PSE', 'Prep Science & Engineering'), ('SE', 'Systems Engineering')], choices_enum=data.DepartmentEnum, max_length=4, verbose_name='department')),
            ],
            options={
                'ordering': ['term', 'department'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', django_choices_field.fields.TextChoicesField(choices=[('sms', 'sms'), ('push', 'push'), ('email', 'email'), ('whatsapp', 'whatsapp'), ('telegram', 'telegram')], choices_enum=notifier.models.NotificationChannel.ChannelEnum, max_length=15, verbose_name='channel')),
            ],
            options={
                'verbose_name': 'notification channel',
                'verbose_name_plural': 'notification channels',
            },
        ),
        migrations.CreateModel(
            name='TrackingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channels', models.ManyToManyField(to='notifier.notificationchannel', verbose_name='channels')),
                ('courses', models.ManyToManyField(blank=True, related_name='tracked_courses', to='notifier.course', verbose_name='courses')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tracking_list', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('success', models.BooleanField(blank=True, default=True, verbose_name='success')),
                ('sent_on', models.DateTimeField(auto_now_add=True, verbose_name='sent on')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifier.notificationchannel', verbose_name='channel')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifier.course', verbose_name='course')),
                ('to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
        ),
    ]
